# Generated by Django 5.2.1 on 2025-05-17 13:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('user_type', models.CharField(choices=[('doctor', 'Doctor'), ('patient', 'Patient')], max_length=7)),
                ('image', models.ImageField(blank=True, null=True, upload_to='users_images/')),
                ('groups', models.ManyToManyField(blank=True, related_name='users_custom_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='users_custom_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomOutstandingToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jti', models.CharField(max_length=255, unique=True)),
                ('token', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outstanding_tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomBlacklistedToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blacklisted_at', models.DateTimeField(auto_now_add=True)),
                ('token', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='custom_blacklisted_token', to='user.customoutstandingtoken')),
            ],
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('delete_patientprofile', 'Can delete patient profile')],
                'default_permissions': ('add', 'change', 'view'),
            },
        ),
        migrations.CreateModel(
            name='DoctorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialty', models.CharField(choices=[('Cardiology', 'Cardiology'), ('Dermatology', 'Dermatology'), ('Endocrinology', 'Endocrinology'), ('Gastroenterology', 'Gastroenterology'), ('Hematology', 'Hematology'), ('Infectious Disease', 'Infectious Disease'), ('Nephrology', 'Nephrology'), ('Neurology', 'Neurology'), ('Obstetrics and Gynecology', 'Obstetrics and Gynecology'), ('Oncology', 'Oncology'), ('Ophthalmology', 'Ophthalmology'), ('Orthopedics', 'Orthopedics'), ('Otolaryngology', 'Otolaryngology (ENT)'), ('Pediatrics', 'Pediatrics'), ('Psychiatry', 'Psychiatry'), ('Pulmonology', 'Pulmonology'), ('Radiology', 'Radiology'), ('Rheumatology', 'Rheumatology'), ('Surgery', 'Surgery'), ('Urology', 'Urology')], default='Gastroenterology', max_length=255)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('university', models.CharField(choices=[('Cairo University', 'Cairo University'), ('Ain Shams University', 'Ain Shams University'), ('Alexandria University', 'Alexandria University'), ('Mansoura University', 'Mansoura University'), ('Zagazig University', 'Zagazig University'), ('Tanta University', 'Tanta University'), ('Assiut University', 'Assiut University'), ('Al-Azhar University', 'Al-Azhar University'), ('Helwan University', 'Helwan University'), ('Suez Canal University', 'Suez Canal University'), ('Menoufia University', 'Menoufia University'), ('Minia University', 'Minia University'), ('Beni Suef University', 'Beni Suef University'), ('Sohag University', 'Sohag University'), ('South Valley University', 'South Valley University'), ('Fayoum University', 'Fayoum University'), ('Kafr El Sheikh University', 'Kafr El Sheikh University'), ('Damietta University', 'Damietta University'), ('Benha University', 'Benha University')], default='Cairo University', max_length=255)),
                ('experience_years', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('delete_doctorprofile', 'Can delete doctor profile')],
                'default_permissions': ('add', 'change', 'view'),
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Lower('license_number'), name='unique_license_number_case_insensitive')],
            },
        ),
    ]
